"""
Создать собственный класс-исключение, обрабатывающий ситуацию деления на ноль.
    При вводе нуля в качестве делителя программа должна корректно обработать эту ситуацию и не завершиться с ошибкой.
"""
from re import compile


class MyZeroDivizion(Exception):
    """Самопальное исключение зиро дивижен"""
    txt = "MyZeroDivizion: деление на ноль!"


REG = compile(r"^[+-]?[0-9]+\.?[0-9]*$")    # регулярка для валидации числа
while True:                                 # крутим цикл пока не надоест делить
    x = input('Введите делимое: ')              # забираем x
    y = input('Введите делитель: ')             # забираем y
    if not REG.match(x) or not REG.match(y):    # проверяем их на вшивость
        print('Требуется ввести числа!', '\n')
        continue
    x = float(x)                                # преобразовываем их в числа
    y = float(y)
    try:                                        # перехват самопального исключения
        if not y:                                   # если делитель == 0 инициируем исключение
            raise MyZeroDivizion
        print(round(x / y + 5 / 10 ** 8, 2), '\n')    # делим x на y и округляем до 2 знаков после запятой
    except MyZeroDivizion as err:
        print(err.txt, '\n')
    more = input('Введите "да", если хотите повторить: ')
    if more.lower() != 'да':                                # запрашиваем повтор ввода
        print('Завершение программы')
        break
